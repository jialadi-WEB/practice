// 1. 1-100之间所有数的总和 与 平均值
// 2. 1-100之间所有偶数的和
// 3. 100以内7的倍数的总和
// 4. 利用JavaScript完成如下九九乘法表
// for (var i = 1; i <= 9; i++) {
//   var str = ""
//   for (var j = 1; j <= i; j++) {
//     str += j + '*' + i + '=' + i * j+ " "
//   }
//   console.log(str)
// }

// 5. 用户输入一个数字，列出所有它能够整除的数字。
// var num = 18;
// for(var i=1;i<=18;i++){
//   if(num%i==0){
//     console.log(i)
//   }
// }

// 6. 利用JavaScript求：1+2+3+…+100的和（使用while语句）
// 7. 利用JavaScript完成如下功能：要求在1~1000数字之中，找出所有能被5整除，或者被6整除的数字，并在控制台输出这些数字
// 8. 打印一个 5行4列的矩形
// for(var i=1;i<=5;i++){
//   var str ="";
//   for(var j=1;j<=4;j++){
//     str += "*"
//   }
//   console.log(str)

// }
// 9. 利用JavaScript完成输出如下图形（由“空格”和“*”这两种符号组成）
//         * 
//        * * 
//       * * * 
//      * * * * 
//     * * * * * 
// for (var i = 1; i <= 5; i++) {
//   var str = " "
//   for (var k = 1; k <= 5- i; k++) {
//     str += " "
//   }
//   for (var j = 1; j <= i; j++) {
//     str += " *"
//   }
//   console.log(str)
// }

//等腰三角形
// var alt = "";
// for(var i=1; i<=5; i++){
//     var blank = "";
//     for(var j=1; j<=5-i; j++){   //打印空格
//         blank += " ";
//     }
//     var stars = "";
//     for(var m=1; m<=2*i-1; m++){    //打印*
//         stars += "*";
//     }
//     alt += blank + stars + "\n";   //字符串的拼接,拼为一行
// }
// console.log(alt);



// 10. 利用JavaScript，使用循环语句输出如下菱形图案（由“-”和“*”这两种符号组成）

//      ---*
//      --***
//      -*****
//      *******
//      -*****
//      --***
//      ---*
// for (var i = 1; i <= 4; i++) {
//   for (var k = 1; k <= 4-i; k++) {
//     document.write('&nbsp;')
//   }
//   for (var j = 1; j <= 2*i-1; j++) {
//     document.write("*")
//   }

//   document.write('<br/>')
// }
// for (var i = 3; i >=1; i--) {
//   for (var k = 1; k <= 4-i; k++) {
//     document.write('&nbsp;')
//   }
//   for (var j = 1; j <= 2*i-1; j++) {
//     document.write("*")
//   }

//   document.write('<br/>')
// }



// 11.利用JavaScript完成输出如下图形（由“空格”和“*”这两种符号组成）
//      55555
//      4444
//      333
//      22
//      1
//      22
//      333
//      4444
//      55555
// for (var i = 5; i >= 1; i--) {
//   var str = ""
//   for (var j = 1; j <= i; j++) {
//     str += i
//   }
//   console.log(str)
// }
// for (var i = 2; i <= 5; i++) {
//   var str1 = ""
//   for (var j = 1; j <= i; j++) {
//     str1 += i
//   }
//   console.log(str1)

// }


// 12.利用JavaScript完成输出如下图形（由“空格”和“*”这两种符号组成）
//      *                      *********
//      ***                   *******
//      *****                *****
//      *******             ***      
//      *********          *  
// for (var i = 1; i <= 5; i++) {
//   var str = ""
//   for (var j = 1; j <= 2*i-1; j++) {
//     str += "*"
//   }
//   console.log(str)
// }

// for(var i=5;i>=0;i--){
//   var str = ""
//   for(var k=1;k<=i;k++){
//     str += " "
//   }
//   for(var j=1;j<=2*i-1;j++){
//     str += "*"
//   }
//   console.log(str)
// }

// 13. 利用JavaScript打印出所有的"水仙花数"，所谓"水仙花数"是指一个三位数，其各位数字立方和等于该数本身。
// for(var i=100;i<1000;i++){
//   var bai = parseInt(i/100);
//   var shi = parseInt(i%100/10)
//   var ge = parseInt(i%10);
//   if(i === shi*shi*shi+bai*bai*bai+ge*ge*ge){
//     console.log(i)  // 153 370 371 407
//   }
// }


// 14. 利用JavaScript的for循环输出1-100之间所有的质数（只能被1和自身整除的数，不包括1）

// 15. 求整数1～100的累加值，但要求跳过所有个位为3的数【用continue实现】

// 16. 打印1到100之内的整数，但数字中包含9的要跳过

// 17. 打印1-100中前三个17的整数倍。
// 18. 求1~100以内(包含1和100)能同时被3，5整除的数的和，并将求出的和打印到控制台上.

// 19. 小区楼号范围1-30，但是由于风水讲究，小区没有包含4、7、14、18、24的楼号，请为小区楼号报号。
// for(var i=1;i<=30;i++){
//   if(i==4 || i==7 || i==14 || i==18 || i==24){
//     continue;
//   }
//   console.log(i)
// }


// 20. 要求：圆的面积小于50，请打印出所有符合面积要求的整数半径。
// 21. 遍历1到100之间（包含1和100）的所有数字，统计能被5整除的偶数的个数，最后将个数打印在控制台

// 22. 题意是这样的：5文钱可以买一只公鸡，3文钱可以买一只母鸡，1文钱可以买3只雏鸡。现在用100文钱买100只鸡，那么各有公鸡、母鸡、雏鸡多少只？
// var gongji = 0;
// var muji = 0;
// var chuji = 0;
// for(var i = 0;i<=20;i++){
//   for(var j = 0;j<=33;j++){
//     if(5*i+3*j+((100-i-j)/3)=== 100&&(100-i-j)%3==0){
//      console.log('公鸡'+i+'只,'+'母鸡'+j+'只,'+'雏鸡'+((100-i-j)))
//     }
//   }
// } 
// 公鸡0只,母鸡25只,雏鸡75
// 公鸡4只,母鸡18只,雏鸡78
// 公鸡8只,母鸡11只,雏鸡81
// 公鸡12只,母鸡4只,雏鸡84

// 23. 一球从100米高度自由落下，每次落地后反跳回原高度的一半；再落下，编程实现获取它在 第10次落地时，共经过多少米？第10次反弹多高？
// 第一次落地      100
// 第二次落地      200
// 第三次落地      250
// 第四次落地      275
// 得出结论     h2 = h1+100/Math.pow(2,i-1)
// var height = 100;
// var i = 1;
// var sum = 0;
// var bounce = 0;
// while (i <= 10) {
//   // 先计算一次告诉
//   sum += height;
//   height = 100 / (Math.pow(2, i - 1))
//   // 第n次反弹的高度
//   bounce = 100 / (Math.pow(2, i))
//   i++;

// }
// // 第十次落地，经过的高度
// console.log(sum) // 299.609375
// //  第10次反弹多高
// console.log(bounce) // 0.09765625


// 24. 一小和尚挑水，要把水缸装满，而且每次只能挑5升水，水缸能容纳80升水。问：小和尚要挑几次才能把水缸挑满？
// var water = 5;
// var i = 0,
//   gang = 0;
// while (gang <= 80) {
//   gang += water * i;
//   i++;

// }
// console.log(i)



// 25.若用户猜的小于50，提示：猜小了；否则提示猜大了；猜中了，提示：中奖了(不能继续猜谜)，(用while实现)
// var num = prompt('请输入一个数字') - 0;
// while (num !== 50) {
//   if (num < 50) {
//     alert('猜小了')
//   } else if (num > 50) {
//     alert('猜大了')
//   }else{
//     alert('恭喜您,中奖了(不能继续猜谜)');
//     break;
//   }
//   num = prompt('请输入一个数字') - 0;
// }




// 26.假设某人有100,000现金。每经过一次路口需要进行一次交费。交费规则为当他现金大于50,000时每次需要交5%如果现金小于等于50,000时每次交5,000。
// 请写一程序计算此人可以经过多少次这个路口， （用while实现）
// var money = 100000;
// var roads = 0;
// while (money >= 5000) {
//   if (money > 50000) {
//     money -= money * 0.05
//   } else {
//     money -= 5000
//   }
//   roads++;
// }
// console.log(roads) // 23

// 27.打印100以内 7的倍数(用while实现)
// 28.使用do-while循环：输出询问“我爱你，嫁给我吧？”，选择“你喜欢我吗？(y/n):"，如果输入为y则打印”我们形影不离“，若输入为n,则继续询问

// 第一种方式
//  do{
//   var que = prompt('我爱你，嫁给我吧?选择“你喜欢我吗？(y/n):'); 
//  }while(que === 'y')

// var que = prompt('我爱你，嫁给我吧?选择“你喜欢我吗？(y/n):');

// while (que !== 'y') {
//   var que = prompt('我爱你，嫁给我吧?选择“你喜欢我吗？(y/n):');
// }
// if (que === 'y') {
//     alert(' 我们形影不离')
//   }

// 第二种方式 
// do {
//   var que = prompt('我爱你，嫁给我吧?选择“你喜欢我吗？(y/n):');
//   if(que === 'y'){
//     alert('我们形影不离')
//   }
// } while (que !== 'y')


// 29.一张纸的厚度大约是0.08mm，对折多少次之后能达到珠穆朗玛峰的高度（8848.13米）？  
// var height = 0.08
// var i = 0;
// var totalHeight = 0;
// // 对折一次是 0.88 *2
// // 对折两次是 0.88 *4
// // 对折三次是 0.88* 8

// while (totalHeight <= 8848.13) {
//   i++;
//   // 计算对折的高度
//   totalHeight = height / 1000 * (Math.pow(2, i));

// }
// console.log(i) // 27



// 用for循环求2+22+222+2222+22222的和
// var sum = 2;
// var num = 2;
// for(var i=2;i<=5;i++){
//    sum += (num*10+2);
//    num = num*10+2;
// }
// console.log(sum)  // 24690



// 给定一个非负整数 c ，你要判断是否存在两个整数 a 和 b，使得 a2 + b2 = c
// 输入: 5
// 输出: True
// 解释: 1 * 1 + 2 * 2 = 5
// var c = 10;
// for(var i=1;i<=c;i++){
//    for(var j=1;j<=c;j++){
//       if(i*i+j*j == c){
//         console.log(true)
//       }
//    }
// }



// 给你一个日期，请你设计一个算法来判断它是对应一周中的哪一天。

// 输入为三个整数：day、month 和 year，分别表示日、月、年。

// 您返回的结果必须是这几个值中的一个 {"Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"}。

//  

// 示例 1：

// 输入：day = 31, month = 8, year = 2019
// 输出："Saturday"
// 示例 2：

// 输入：day = 18, month = 7, year = 1999
// 输出："Sunday"
// 示例 3：

// 输入：day = 15, month = 8, year = 1993
// 输出："Sunday"
//  

// 提示：

// 给出的日期一定是在 1971 到 2100 年之间的有效日期。
// 。





//  给定字符串J 代表石头中宝石的类型，和字符串 S代表你拥有的石头。 S 中每个字符代表了一种你拥有的石头的类型，你想知道你拥有的石头中有多少是宝石。

// J 中的字母不重复，J 和 S中的所有字符都是字母。字母区分大小写，因此"a"和"A"是不同类型的石头。

// 示例 1:
// 输入: J = "aA", S = "aAAbbbb"
// 输出: 3

// 示例 2:
// 输入: J = "z", S = "ZZ"
// 输出: 0
// 注意:

// S 和 J 最多含有50个字母。
//  J 中的字符不重复。


//  打印闪电

// *
// **
// ***  
// *******
//  ***
//  **
//  *

// for(var i = 1;i<=3;i++){
//   var str = "";
//   for(var j = 1;j<=i;j++){
//     str += "*"
//   }
//   console.log(str)
// }
// //然后打印7个星星的
// var str = "";
// for(var i =1;i<=7;i++){
//    str += "*"
// }
// console.log(str)

// for(var i =3;i>=1;i--){
//   var str1= "";
//   var kong = " ";  // 表示空格
//   for(var j=1;j<=i;j++){
//     str1 += "*"
//   }
//   console.log(kong+str1)
// }



// s = 's3j_d67h_a5s624b_u'
// count1 = 0      # 定义字母个数
// count2 = 0      # 定义数字个数
// count3 = 0      # 定义下划线个数
 
// for i in s:       
    
//     if i >='a'and i<='z'or i >= 'A'and i <='Z':
        
//         count1+=1
    
//     elif i >='1' and i<= '9 ':
        
//          count2+=1
    
//     else:
        
//         count3+=1
 
// print('字母为{}个，数字为{}个，下划线为{}个'.format(count1,count2,count))



// 2、九九乘法表

// 1*1=1 
// 1*2=2 2*2=4 
// 1*3=3 2*3=6 3*3=9 
// 1*4=4 2*4=8 3*4=12 4*4=16 
// 1*5=5 2*5=10 3*5=15 4*5=20 5*5=25 
// 1*6=6 2*6=12 3*6=18 4*6=24 5*6=30 6*6=36 
// 1*7=7 2*7=14 3*7=21 4*7=28 5*7=35 6*7=42 7*7=49 
// 1*8=8 2*8=16 3*8=24 4*8=32 5*8=40 6*8=48 7*8=56 8*8=64 
// 1*9=9 2*9=18 3*9=27 4*9=36 5*9=45 6*9=54 7*9=63 8*9=72 9*9=81 
// 1*9=9 2*9=18 3*9=27 4*9=36 5*9=45 6*9=54 7*9=63 8*9=72 9*9=81 
// 1*8=8 2*8=16 3*8=24 4*8=32 5*8=40 6*8=48 7*8=56 8*8=64 
// 1*7=7 2*7=14 3*7=21 4*7=28 5*7=35 6*7=42 7*7=49 
// 1*6=6 2*6=12 3*6=18 4*6=24 5*6=30 6*6=36 
// 1*5=5 2*5=10 3*5=15 4*5=20 5*5=25 
// 1*4=4 2*4=8 3*4=12 4*4=16 
// 1*3=3 2*3=6 3*3=9 
// 1*2=2 2*2=4 
// 1*1=1 

// for(var i =1;i<=6;i++){
//   var str = ""
//   var kong =" "
//   for(var k =6;k>=i;k--){
//     kong += " "
//   }
//   for(var j =1;j<=10;j++){
//    str += "*"
//   }
//   console.log(kong+str)
// }

